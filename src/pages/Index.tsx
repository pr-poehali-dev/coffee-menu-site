import { useState, useEffect } from 'react';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';

interface MenuItem {
  name: string;
  description: string;
  price: number;
}

const menuData = {
  coffee: [
    { name: '–≠—Å–ø—Ä–µ—Å—Å–æ', description: '–ö—Ä–µ–ø–∫–∏–π –∞—Ä–æ–º–∞—Ç–Ω—ã–π —ç—Å–ø—Ä–µ—Å—Å–æ', price: 0 },
    { name: '–ê–º–µ—Ä–∏–∫–∞–Ω–æ', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∞–º–µ—Ä–∏–∫–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–≤–æ–π–Ω–æ–≥–æ —ç—Å–ø—Ä–µ—Å—Å–æ', price: 0 },
    { name: '–ö–∞–ø—É—á–∏–Ω–æ', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –∫–∞–ø—É—á–∏–Ω–æ —Å –Ω–µ–∂–Ω–æ–π –º–æ–ª–æ—á–Ω–æ–π –ø–µ–Ω–∫–æ–π', price: 0 },
    { name: '–õ–∞—Ç—Ç–µ', description: '–ù–µ–∂–Ω—ã–π –∫–æ—Ñ–µ —Å –º–æ–ª–æ–∫–æ–º –∏ –≤–æ–∑–¥—É—à–Ω–æ–π –ø–µ–Ω–∫–æ–π', price: 0 },
  ],
  cocktails: [
    { name: '–ë–∞–Ω–∞–Ω–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å', description: '–ì—É—Å—Ç–æ–π –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å —Å–æ —Å–ø–µ–ª—ã–º –±–∞–Ω–∞–Ω–æ–º –∏ —Å–ª–∏–≤–∫–∞–º–∏', price: 0 },
    { name: '–®–æ–∫–æ–ª–∞–¥–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å', description: '–ù–∞—Å—ã—â–µ–Ω–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å —Å –±–µ–ª—å–≥–∏–π—Å–∫–∏–º —à–æ–∫–æ–ª–∞–¥–æ–º –∏ –º–æ—Ä–æ–∂–µ–Ω—ã–º', price: 0 },
  ],
  salads: [
    { name: '–°–∞–ª–∞—Ç —Å —Ç—ë—Ä—Ç—ã–º —Å—ã—Ä–æ–º', description: '–°–≤–µ–∂–∏–π —Å–∞–ª–∞—Ç —Å —Ç—ë—Ä—Ç—ã–º —Å—ã—Ä–æ–º –∏ –∑–µ–ª–µ–Ω—å—é', price: 0 },
    { name: '–°–∞–ª–∞—Ç –æ–≥—É—Ä—Ü—ã –∏ –ø–æ–º–∏–¥–æ—Ä—ã', description: '–°–≤–µ–∂–∏–µ –æ–≥—É—Ä—Ü—ã –∏ –ø–æ–º–∏–¥–æ—Ä—ã —Å –∞—Ä–æ–º–∞—Ç–Ω—ã–º –º–∞—Å–ª–æ–º', price: 0 },
  ],
  juices: [
    { name: '–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ–∫', description: '–°–≤–µ–∂–µ–≤—ã–∂–∞—Ç—ã–π —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ–∫ —Å —Å–æ–ª—å—é –∏ —Å–ø–µ—Ü–∏—è–º–∏', price: 0 },
    { name: '–Ø–±–ª–æ—á–Ω—ã–π —Å–æ–∫', description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —è–±–ª–æ—á–Ω—ã–π —Å–æ–∫ –∏–∑ —Å–ø–µ–ª—ã—Ö —è–±–ª–æ–∫', price: 0 },
  ],
};

const Snowflake = ({ delay, duration, left }: { delay: number; duration: number; left: string }) => {
  return (
    <div
      className="snowflake text-2xl"
      style={{
        left,
        animationDelay: `${delay}s`,
        animationDuration: `${duration}s`,
      }}
    >
      ‚ùÑ
    </div>
  );
};

export default function Index() {
  const [activeTab, setActiveTab] = useState('coffee');
  const [snowflakes, setSnowflakes] = useState<Array<{ id: number; delay: number; duration: number; left: string }>>([]);

  useEffect(() => {
    const flakes = Array.from({ length: 20 }, (_, i) => ({
      id: i,
      delay: Math.random() * 5,
      duration: 10 + Math.random() * 10,
      left: `${Math.random() * 100}%`,
    }));
    setSnowflakes(flakes);
  }, []);

  const getIcon = (category: string) => {
    switch (category) {
      case 'coffee':
        return 'Coffee';
      case 'cocktails':
        return 'Wine';
      case 'salads':
        return 'Salad';
      case 'juices':
        return 'GlassWater';
      default:
        return 'Circle';
    }
  };

  return (
    <div className="min-h-screen relative overflow-hidden">
      {snowflakes.map((flake) => (
        <Snowflake key={flake.id} delay={flake.delay} duration={flake.duration} left={flake.left} />
      ))}

      <div 
        className="absolute inset-0 bg-gradient-to-br from-primary via-secondary to-primary opacity-90"
        style={{ zIndex: -1 }}
      />

      <div className="container mx-auto px-4 py-8 relative z-10">
        <header className="text-center mb-12 animate-fade-in">
          <div className="flex justify-center items-center gap-3 mb-4">
            <span className="text-6xl">‚òï</span>
            <h1 className="text-6xl md:text-7xl font-bold text-white drop-shadow-lg">
              –ö–æ—Ñ–µ 55
            </h1>
            <span className="text-6xl">üéÑ</span>
          </div>
          <p className="text-xl md:text-2xl text-white/90 font-light tracking-wide">
            –ü—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–µ –∫–æ—Ñ–µ–π–Ω–æ–µ –º–µ–Ω—é
          </p>
        </header>

        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full max-w-5xl mx-auto">
          <TabsList className="grid w-full grid-cols-4 mb-8 bg-white/95 backdrop-blur-sm p-2 h-auto">
            <TabsTrigger value="coffee" className="flex flex-col items-center gap-2 py-3 data-[state=active]:bg-gradient-to-r data-[state=active]:from-primary data-[state=active]:to-secondary data-[state=active]:text-white">
              <Icon name="Coffee" size={24} />
              <span className="text-sm md:text-base font-medium">–ö–æ—Ñ–µ</span>
            </TabsTrigger>
            <TabsTrigger value="cocktails" className="flex flex-col items-center gap-2 py-3 data-[state=active]:bg-gradient-to-r data-[state=active]:from-primary data-[state=active]:to-secondary data-[state=active]:text-white">
              <Icon name="Wine" size={24} />
              <span className="text-sm md:text-base font-medium">–ö–æ–∫—Ç–µ–π–ª–∏</span>
            </TabsTrigger>
            <TabsTrigger value="salads" className="flex flex-col items-center gap-2 py-3 data-[state=active]:bg-gradient-to-r data-[state=active]:from-primary data-[state=active]:to-secondary data-[state=active]:text-white">
              <Icon name="Salad" size={24} />
              <span className="text-sm md:text-base font-medium">–°–∞–ª–∞—Ç—ã</span>
            </TabsTrigger>
            <TabsTrigger value="juices" className="flex flex-col items-center gap-2 py-3 data-[state=active]:bg-gradient-to-r data-[state=active]:from-primary data-[state=active]:to-secondary data-[state=active]:text-white">
              <Icon name="GlassWater" size={24} />
              <span className="text-sm md:text-base font-medium">–°–æ–∫–∏</span>
            </TabsTrigger>
          </TabsList>

          {Object.entries(menuData).map(([category, items]) => (
            <TabsContent key={category} value={category} className="animate-fade-in">
              <div className="grid md:grid-cols-2 gap-6">
                {items.map((item, index) => (
                  <Card 
                    key={index} 
                    className="bg-white/95 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border-2 border-white/50"
                  >
                    <CardContent className="p-6">
                      <div className="flex justify-between items-start mb-3">
                        <div className="flex items-center gap-3">
                          <div className="text-3xl">
                            {category === 'coffee' && '‚òï'}
                            {category === 'cocktails' && 'üçπ'}
                            {category === 'salads' && 'ü•ó'}
                            {category === 'juices' && 'üßÉ'}
                          </div>
                          <h3 className="text-xl font-semibold text-foreground">{item.name}</h3>
                        </div>
                        <span className="text-2xl font-bold text-primary whitespace-nowrap ml-2">
                          {item.price === 0 ? '–ë–ï–°–ü–õ–ê–¢–ù–û' : `${item.price} ‚ÇΩ`}
                        </span>
                      </div>
                      <p className="text-muted-foreground mb-4 leading-relaxed">{item.description}</p>
                      <Button 
                        className="w-full bg-gradient-to-r from-primary to-secondary hover:from-primary/90 hover:to-secondary/90 text-white font-semibold shadow-lg"
                      >
                        –ó–∞–∫–∞–∑–∞—Ç—å
                      </Button>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </TabsContent>
          ))}
        </Tabs>

        <footer className="text-center mt-16 text-white/80">
          <p className="text-lg">üéÖ –° –ù–æ–≤—ã–º –ì–æ–¥–æ–º –æ—Ç –∫–æ–º–∞–Ω–¥—ã –ö–æ—Ñ–µ 55! üéÅ</p>
        </footer>
      </div>
    </div>
  );
}